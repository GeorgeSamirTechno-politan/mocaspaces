// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.data.checkMobile;

import android.content.Context;
import com.technopolitan.mocaspaces.data.country.CountryDataModule;
import com.technopolitan.mocaspaces.modules.RXModule;
import com.technopolitan.mocaspaces.modules.ValidationModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CheckMobileDataModule_Factory implements Factory<CheckMobileDataModule> {
  private final Provider<CountryDataModule> countryDataModuleProvider;

  private final Provider<Context> contextProvider;

  private final Provider<ValidationModule> validationModuleProvider;

  private final Provider<RXModule> rxModuleProvider;

  public CheckMobileDataModule_Factory(Provider<CountryDataModule> countryDataModuleProvider,
      Provider<Context> contextProvider, Provider<ValidationModule> validationModuleProvider,
      Provider<RXModule> rxModuleProvider) {
    this.countryDataModuleProvider = countryDataModuleProvider;
    this.contextProvider = contextProvider;
    this.validationModuleProvider = validationModuleProvider;
    this.rxModuleProvider = rxModuleProvider;
  }

  @Override
  public CheckMobileDataModule get() {
    return newInstance(countryDataModuleProvider.get(), contextProvider.get(), validationModuleProvider.get(), rxModuleProvider.get());
  }

  public static CheckMobileDataModule_Factory create(
      Provider<CountryDataModule> countryDataModuleProvider, Provider<Context> contextProvider,
      Provider<ValidationModule> validationModuleProvider, Provider<RXModule> rxModuleProvider) {
    return new CheckMobileDataModule_Factory(countryDataModuleProvider, contextProvider, validationModuleProvider, rxModuleProvider);
  }

  public static CheckMobileDataModule newInstance(CountryDataModule countryDataModule,
      Context context, ValidationModule validationModule, RXModule rxModule) {
    return new CheckMobileDataModule(countryDataModule, context, validationModule, rxModule);
  }
}
