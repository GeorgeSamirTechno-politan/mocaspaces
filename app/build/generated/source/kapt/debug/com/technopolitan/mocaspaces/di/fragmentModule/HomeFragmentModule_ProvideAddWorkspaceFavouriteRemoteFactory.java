// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.di.fragmentModule;

import com.technopolitan.mocaspaces.data.remote.AddFavouriteWorkSpaceRemote;
import com.technopolitan.mocaspaces.modules.SharedPrefModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeFragmentModule_ProvideAddWorkspaceFavouriteRemoteFactory implements Factory<AddFavouriteWorkSpaceRemote> {
  private final HomeFragmentModule module;

  private final Provider<SharedPrefModule> sharedPrefModuleProvider;

  public HomeFragmentModule_ProvideAddWorkspaceFavouriteRemoteFactory(HomeFragmentModule module,
      Provider<SharedPrefModule> sharedPrefModuleProvider) {
    this.module = module;
    this.sharedPrefModuleProvider = sharedPrefModuleProvider;
  }

  @Override
  public AddFavouriteWorkSpaceRemote get() {
    return provideAddWorkspaceFavouriteRemote(module, sharedPrefModuleProvider.get());
  }

  public static HomeFragmentModule_ProvideAddWorkspaceFavouriteRemoteFactory create(
      HomeFragmentModule module, Provider<SharedPrefModule> sharedPrefModuleProvider) {
    return new HomeFragmentModule_ProvideAddWorkspaceFavouriteRemoteFactory(module, sharedPrefModuleProvider);
  }

  public static AddFavouriteWorkSpaceRemote provideAddWorkspaceFavouriteRemote(
      HomeFragmentModule instance, SharedPrefModule sharedPrefModule) {
    return Preconditions.checkNotNullFromProvides(instance.provideAddWorkspaceFavouriteRemote(sharedPrefModule));
  }
}
