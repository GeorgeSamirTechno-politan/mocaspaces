// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.di.fragmentModule;

import android.app.Activity;
import android.content.Context;
import androidx.fragment.app.Fragment;
import com.technopolitan.mocaspaces.modules.GoogleMapModule;
import com.technopolitan.mocaspaces.modules.PermissionModule;
import com.technopolitan.mocaspaces.modules.UtilityModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocationDetailsFragmentModule_ProvideGoogleMapModuleFactory implements Factory<GoogleMapModule> {
  private final LocationDetailsFragmentModule module;

  private final Provider<Context> contextProvider;

  private final Provider<UtilityModule> utilityModuleProvider;

  private final Provider<Fragment> fragmentProvider;

  private final Provider<PermissionModule> permissionModuleProvider;

  private final Provider<Activity> activityProvider;

  public LocationDetailsFragmentModule_ProvideGoogleMapModuleFactory(
      LocationDetailsFragmentModule module, Provider<Context> contextProvider,
      Provider<UtilityModule> utilityModuleProvider, Provider<Fragment> fragmentProvider,
      Provider<PermissionModule> permissionModuleProvider, Provider<Activity> activityProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.utilityModuleProvider = utilityModuleProvider;
    this.fragmentProvider = fragmentProvider;
    this.permissionModuleProvider = permissionModuleProvider;
    this.activityProvider = activityProvider;
  }

  @Override
  public GoogleMapModule get() {
    return provideGoogleMapModule(module, contextProvider.get(), utilityModuleProvider.get(), fragmentProvider.get(), permissionModuleProvider.get(), activityProvider.get());
  }

  public static LocationDetailsFragmentModule_ProvideGoogleMapModuleFactory create(
      LocationDetailsFragmentModule module, Provider<Context> contextProvider,
      Provider<UtilityModule> utilityModuleProvider, Provider<Fragment> fragmentProvider,
      Provider<PermissionModule> permissionModuleProvider, Provider<Activity> activityProvider) {
    return new LocationDetailsFragmentModule_ProvideGoogleMapModuleFactory(module, contextProvider, utilityModuleProvider, fragmentProvider, permissionModuleProvider, activityProvider);
  }

  public static GoogleMapModule provideGoogleMapModule(LocationDetailsFragmentModule instance,
      Context context, UtilityModule utilityModule, Fragment fragment,
      PermissionModule permissionModule, Activity activity) {
    return Preconditions.checkNotNullFromProvides(instance.provideGoogleMapModule(context, utilityModule, fragment, permissionModule, activity));
  }
}
