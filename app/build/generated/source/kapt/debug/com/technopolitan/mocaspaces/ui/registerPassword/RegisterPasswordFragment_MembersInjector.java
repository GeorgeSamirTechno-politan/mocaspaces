// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.registerPassword;

import com.technopolitan.mocaspaces.modules.ApiResponseModule;
import com.technopolitan.mocaspaces.modules.NavigationModule;
import com.technopolitan.mocaspaces.ui.register.RegisterViewModel;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RegisterPasswordFragment_MembersInjector implements MembersInjector<RegisterPasswordFragment> {
  private final Provider<RegisterPasswordViewModel> viewModelProvider;

  private final Provider<RegisterViewModel> registerViewModelProvider;

  private final Provider<ApiResponseModule<String>> handleRegisterApiProvider;

  private final Provider<NavigationModule> navigationModuleProvider;

  public RegisterPasswordFragment_MembersInjector(
      Provider<RegisterPasswordViewModel> viewModelProvider,
      Provider<RegisterViewModel> registerViewModelProvider,
      Provider<ApiResponseModule<String>> handleRegisterApiProvider,
      Provider<NavigationModule> navigationModuleProvider) {
    this.viewModelProvider = viewModelProvider;
    this.registerViewModelProvider = registerViewModelProvider;
    this.handleRegisterApiProvider = handleRegisterApiProvider;
    this.navigationModuleProvider = navigationModuleProvider;
  }

  public static MembersInjector<RegisterPasswordFragment> create(
      Provider<RegisterPasswordViewModel> viewModelProvider,
      Provider<RegisterViewModel> registerViewModelProvider,
      Provider<ApiResponseModule<String>> handleRegisterApiProvider,
      Provider<NavigationModule> navigationModuleProvider) {
    return new RegisterPasswordFragment_MembersInjector(viewModelProvider, registerViewModelProvider, handleRegisterApiProvider, navigationModuleProvider);
  }

  @Override
  public void injectMembers(RegisterPasswordFragment instance) {
    injectViewModel(instance, viewModelProvider.get());
    injectRegisterViewModel(instance, registerViewModelProvider.get());
    injectHandleRegisterApi(instance, handleRegisterApiProvider.get());
    injectNavigationModule(instance, navigationModuleProvider.get());
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.registerPassword.RegisterPasswordFragment.viewModel")
  public static void injectViewModel(RegisterPasswordFragment instance,
      RegisterPasswordViewModel viewModel) {
    instance.viewModel = viewModel;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.registerPassword.RegisterPasswordFragment.registerViewModel")
  public static void injectRegisterViewModel(RegisterPasswordFragment instance,
      RegisterViewModel registerViewModel) {
    instance.registerViewModel = registerViewModel;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.registerPassword.RegisterPasswordFragment.handleRegisterApi")
  public static void injectHandleRegisterApi(RegisterPasswordFragment instance,
      ApiResponseModule<String> handleRegisterApi) {
    instance.handleRegisterApi = handleRegisterApi;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.registerPassword.RegisterPasswordFragment.navigationModule")
  public static void injectNavigationModule(RegisterPasswordFragment instance,
      NavigationModule navigationModule) {
    instance.navigationModule = navigationModule;
  }
}
