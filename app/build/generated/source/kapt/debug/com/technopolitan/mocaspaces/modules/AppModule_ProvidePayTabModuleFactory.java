// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.modules;

import android.app.Activity;
import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidePayTabModuleFactory implements Factory<PayTabModule> {
  private final AppModule module;

  private final Provider<Context> contextProvider;

  private final Provider<SharedPrefModule> sharedPrefModuleProvider;

  private final Provider<CustomAlertModule> alertModuleProvider;

  private final Provider<Activity> activityProvider;

  public AppModule_ProvidePayTabModuleFactory(AppModule module, Provider<Context> contextProvider,
      Provider<SharedPrefModule> sharedPrefModuleProvider,
      Provider<CustomAlertModule> alertModuleProvider, Provider<Activity> activityProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.sharedPrefModuleProvider = sharedPrefModuleProvider;
    this.alertModuleProvider = alertModuleProvider;
    this.activityProvider = activityProvider;
  }

  @Override
  public PayTabModule get() {
    return providePayTabModule(module, contextProvider.get(), sharedPrefModuleProvider.get(), alertModuleProvider.get(), activityProvider.get());
  }

  public static AppModule_ProvidePayTabModuleFactory create(AppModule module,
      Provider<Context> contextProvider, Provider<SharedPrefModule> sharedPrefModuleProvider,
      Provider<CustomAlertModule> alertModuleProvider, Provider<Activity> activityProvider) {
    return new AppModule_ProvidePayTabModuleFactory(module, contextProvider, sharedPrefModuleProvider, alertModuleProvider, activityProvider);
  }

  public static PayTabModule providePayTabModule(AppModule instance, Context context,
      SharedPrefModule sharedPrefModule, CustomAlertModule alertModule, Activity activity) {
    return Preconditions.checkNotNullFromProvides(instance.providePayTabModule(context, sharedPrefModule, alertModule, activity));
  }
}
