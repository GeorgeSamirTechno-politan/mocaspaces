// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.mobileOTP;

import com.technopolitan.mocaspaces.modules.ApiResponseModule;
import com.technopolitan.mocaspaces.modules.NavigationModule;
import com.technopolitan.mocaspaces.ui.register.RegisterViewModel;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MobileOTPFragment_MembersInjector implements MembersInjector<MobileOTPFragment> {
  private final Provider<MobileOTPViewModel> viewModelProvider;

  private final Provider<NavigationModule> navigationModuleProvider;

  private final Provider<ApiResponseModule<String>> resendCodeHandlerProvider;

  private final Provider<ApiResponseModule<String>> verifyMobileHandlerProvider;

  private final Provider<RegisterViewModel> registerViewModelProvider;

  public MobileOTPFragment_MembersInjector(Provider<MobileOTPViewModel> viewModelProvider,
      Provider<NavigationModule> navigationModuleProvider,
      Provider<ApiResponseModule<String>> resendCodeHandlerProvider,
      Provider<ApiResponseModule<String>> verifyMobileHandlerProvider,
      Provider<RegisterViewModel> registerViewModelProvider) {
    this.viewModelProvider = viewModelProvider;
    this.navigationModuleProvider = navigationModuleProvider;
    this.resendCodeHandlerProvider = resendCodeHandlerProvider;
    this.verifyMobileHandlerProvider = verifyMobileHandlerProvider;
    this.registerViewModelProvider = registerViewModelProvider;
  }

  public static MembersInjector<MobileOTPFragment> create(
      Provider<MobileOTPViewModel> viewModelProvider,
      Provider<NavigationModule> navigationModuleProvider,
      Provider<ApiResponseModule<String>> resendCodeHandlerProvider,
      Provider<ApiResponseModule<String>> verifyMobileHandlerProvider,
      Provider<RegisterViewModel> registerViewModelProvider) {
    return new MobileOTPFragment_MembersInjector(viewModelProvider, navigationModuleProvider, resendCodeHandlerProvider, verifyMobileHandlerProvider, registerViewModelProvider);
  }

  @Override
  public void injectMembers(MobileOTPFragment instance) {
    injectViewModel(instance, viewModelProvider.get());
    injectNavigationModule(instance, navigationModuleProvider.get());
    injectResendCodeHandler(instance, resendCodeHandlerProvider.get());
    injectVerifyMobileHandler(instance, verifyMobileHandlerProvider.get());
    injectRegisterViewModel(instance, registerViewModelProvider.get());
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.mobileOTP.MobileOTPFragment.viewModel")
  public static void injectViewModel(MobileOTPFragment instance, MobileOTPViewModel viewModel) {
    instance.viewModel = viewModel;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.mobileOTP.MobileOTPFragment.navigationModule")
  public static void injectNavigationModule(MobileOTPFragment instance,
      NavigationModule navigationModule) {
    instance.navigationModule = navigationModule;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.mobileOTP.MobileOTPFragment.resendCodeHandler")
  public static void injectResendCodeHandler(MobileOTPFragment instance,
      ApiResponseModule<String> resendCodeHandler) {
    instance.resendCodeHandler = resendCodeHandler;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.mobileOTP.MobileOTPFragment.verifyMobileHandler")
  public static void injectVerifyMobileHandler(MobileOTPFragment instance,
      ApiResponseModule<String> verifyMobileHandler) {
    instance.verifyMobileHandler = verifyMobileHandler;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.mobileOTP.MobileOTPFragment.registerViewModel")
  public static void injectRegisterViewModel(MobileOTPFragment instance,
      RegisterViewModel registerViewModel) {
    instance.registerViewModel = registerViewModel;
  }
}
