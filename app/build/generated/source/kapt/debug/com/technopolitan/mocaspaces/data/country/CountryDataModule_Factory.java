// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.data.country;

import android.content.Context;
import com.technopolitan.mocaspaces.modules.GlideModule;
import com.technopolitan.mocaspaces.modules.PowerMenuModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CountryDataModule_Factory implements Factory<CountryDataModule> {
  private final Provider<Context> contextProvider;

  private final Provider<PowerMenuModule> powerMenuModuleProvider;

  private final Provider<GlideModule> glideModuleProvider;

  public CountryDataModule_Factory(Provider<Context> contextProvider,
      Provider<PowerMenuModule> powerMenuModuleProvider,
      Provider<GlideModule> glideModuleProvider) {
    this.contextProvider = contextProvider;
    this.powerMenuModuleProvider = powerMenuModuleProvider;
    this.glideModuleProvider = glideModuleProvider;
  }

  @Override
  public CountryDataModule get() {
    return newInstance(contextProvider.get(), powerMenuModuleProvider.get(), glideModuleProvider.get());
  }

  public static CountryDataModule_Factory create(Provider<Context> contextProvider,
      Provider<PowerMenuModule> powerMenuModuleProvider,
      Provider<GlideModule> glideModuleProvider) {
    return new CountryDataModule_Factory(contextProvider, powerMenuModuleProvider, glideModuleProvider);
  }

  public static CountryDataModule newInstance(Context context, PowerMenuModule powerMenuModule,
      GlideModule glideModule) {
    return new CountryDataModule(context, powerMenuModule, glideModule);
  }
}
