// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.di.fragmentModule;

import com.technopolitan.mocaspaces.data.remote.MemberTypeRemote;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PersonalInfoFragmentModule_ProvideMemberTypeRemoteFactory implements Factory<MemberTypeRemote> {
  private final PersonalInfoFragmentModule module;

  public PersonalInfoFragmentModule_ProvideMemberTypeRemoteFactory(
      PersonalInfoFragmentModule module) {
    this.module = module;
  }

  @Override
  public MemberTypeRemote get() {
    return provideMemberTypeRemote(module);
  }

  public static PersonalInfoFragmentModule_ProvideMemberTypeRemoteFactory create(
      PersonalInfoFragmentModule module) {
    return new PersonalInfoFragmentModule_ProvideMemberTypeRemoteFactory(module);
  }

  public static MemberTypeRemote provideMemberTypeRemote(PersonalInfoFragmentModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideMemberTypeRemote());
  }
}
