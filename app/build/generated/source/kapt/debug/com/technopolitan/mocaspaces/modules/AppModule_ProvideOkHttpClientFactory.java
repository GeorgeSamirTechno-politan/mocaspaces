// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.modules;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideOkHttpClientFactory implements Factory<OkHttpClient> {
  private final AppModule module;

  private final Provider<SharedPrefModule> sharedPrefModuleProvider;

  private final Provider<Context> contextProvider;

  public AppModule_ProvideOkHttpClientFactory(AppModule module,
      Provider<SharedPrefModule> sharedPrefModuleProvider, Provider<Context> contextProvider) {
    this.module = module;
    this.sharedPrefModuleProvider = sharedPrefModuleProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public OkHttpClient get() {
    return provideOkHttpClient(module, sharedPrefModuleProvider.get(), contextProvider.get());
  }

  public static AppModule_ProvideOkHttpClientFactory create(AppModule module,
      Provider<SharedPrefModule> sharedPrefModuleProvider, Provider<Context> contextProvider) {
    return new AppModule_ProvideOkHttpClientFactory(module, sharedPrefModuleProvider, contextProvider);
  }

  public static OkHttpClient provideOkHttpClient(AppModule instance,
      SharedPrefModule sharedPrefModule, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideOkHttpClient(sharedPrefModule, context));
  }
}
