// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.main;

import com.technopolitan.mocaspaces.di.viewModel.ViewModelFactory;
import com.technopolitan.mocaspaces.modules.ApiResponseModule;
import com.technopolitan.mocaspaces.modules.AppDefaultModule;
import com.technopolitan.mocaspaces.modules.DialogModule;
import com.technopolitan.mocaspaces.modules.NavigationModule;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SplashFragment_MembersInjector implements MembersInjector<SplashFragment> {
  private final Provider<NavigationModule> navigationModuleProvider;

  private final Provider<DialogModule> dialogModuleProvider;

  private final Provider<AppDefaultModule> appDefaultModelProvider;

  private final Provider<ViewModelFactory> viewModelFactoryProvider;

  private final Provider<ApiResponseModule<String>> refreshFCMApiHandlerProvider;

  public SplashFragment_MembersInjector(Provider<NavigationModule> navigationModuleProvider,
      Provider<DialogModule> dialogModuleProvider,
      Provider<AppDefaultModule> appDefaultModelProvider,
      Provider<ViewModelFactory> viewModelFactoryProvider,
      Provider<ApiResponseModule<String>> refreshFCMApiHandlerProvider) {
    this.navigationModuleProvider = navigationModuleProvider;
    this.dialogModuleProvider = dialogModuleProvider;
    this.appDefaultModelProvider = appDefaultModelProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.refreshFCMApiHandlerProvider = refreshFCMApiHandlerProvider;
  }

  public static MembersInjector<SplashFragment> create(
      Provider<NavigationModule> navigationModuleProvider,
      Provider<DialogModule> dialogModuleProvider,
      Provider<AppDefaultModule> appDefaultModelProvider,
      Provider<ViewModelFactory> viewModelFactoryProvider,
      Provider<ApiResponseModule<String>> refreshFCMApiHandlerProvider) {
    return new SplashFragment_MembersInjector(navigationModuleProvider, dialogModuleProvider, appDefaultModelProvider, viewModelFactoryProvider, refreshFCMApiHandlerProvider);
  }

  @Override
  public void injectMembers(SplashFragment instance) {
    injectNavigationModule(instance, navigationModuleProvider.get());
    injectDialogModule(instance, dialogModuleProvider.get());
    injectAppDefaultModel(instance, appDefaultModelProvider.get());
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectRefreshFCMApiHandler(instance, refreshFCMApiHandlerProvider.get());
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.main.SplashFragment.navigationModule")
  public static void injectNavigationModule(SplashFragment instance,
      NavigationModule navigationModule) {
    instance.navigationModule = navigationModule;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.main.SplashFragment.dialogModule")
  public static void injectDialogModule(SplashFragment instance, DialogModule dialogModule) {
    instance.dialogModule = dialogModule;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.main.SplashFragment.appDefaultModel")
  public static void injectAppDefaultModel(SplashFragment instance,
      AppDefaultModule appDefaultModel) {
    instance.appDefaultModel = appDefaultModel;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.main.SplashFragment.viewModelFactory")
  public static void injectViewModelFactory(SplashFragment instance,
      ViewModelFactory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.main.SplashFragment.refreshFCMApiHandler")
  public static void injectRefreshFCMApiHandler(SplashFragment instance,
      ApiResponseModule<String> refreshFCMApiHandler) {
    instance.refreshFCMApiHandler = refreshFCMApiHandler;
  }
}
