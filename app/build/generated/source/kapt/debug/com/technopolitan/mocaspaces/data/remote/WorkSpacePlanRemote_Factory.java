// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.data.remote;

import android.content.Context;
import com.technopolitan.mocaspaces.modules.NetworkModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WorkSpacePlanRemote_Factory implements Factory<WorkSpacePlanRemote> {
  private final Provider<NetworkModule> networkModuleProvider;

  private final Provider<Context> contextProvider;

  public WorkSpacePlanRemote_Factory(Provider<NetworkModule> networkModuleProvider,
      Provider<Context> contextProvider) {
    this.networkModuleProvider = networkModuleProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public WorkSpacePlanRemote get() {
    return newInstance(networkModuleProvider.get(), contextProvider.get());
  }

  public static WorkSpacePlanRemote_Factory create(Provider<NetworkModule> networkModuleProvider,
      Provider<Context> contextProvider) {
    return new WorkSpacePlanRemote_Factory(networkModuleProvider, contextProvider);
  }

  public static WorkSpacePlanRemote newInstance(NetworkModule networkModule, Context context) {
    return new WorkSpacePlanRemote(networkModule, context);
  }
}
