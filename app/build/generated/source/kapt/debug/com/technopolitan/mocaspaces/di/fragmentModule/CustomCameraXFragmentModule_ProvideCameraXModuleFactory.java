// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.di.fragmentModule;

import android.app.Activity;
import android.content.Context;
import com.technopolitan.mocaspaces.modules.CameraXModule;
import com.technopolitan.mocaspaces.modules.CustomAlertModule;
import com.technopolitan.mocaspaces.modules.PikItModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CustomCameraXFragmentModule_ProvideCameraXModuleFactory implements Factory<CameraXModule> {
  private final CustomCameraXFragmentModule module;

  private final Provider<Context> contextProvider;

  private final Provider<CustomAlertModule> alertModuleProvider;

  private final Provider<Activity> activityProvider;

  private final Provider<PikItModule> pickItModuleProvider;

  public CustomCameraXFragmentModule_ProvideCameraXModuleFactory(CustomCameraXFragmentModule module,
      Provider<Context> contextProvider, Provider<CustomAlertModule> alertModuleProvider,
      Provider<Activity> activityProvider, Provider<PikItModule> pickItModuleProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.alertModuleProvider = alertModuleProvider;
    this.activityProvider = activityProvider;
    this.pickItModuleProvider = pickItModuleProvider;
  }

  @Override
  public CameraXModule get() {
    return provideCameraXModule(module, contextProvider.get(), alertModuleProvider.get(), activityProvider.get(), pickItModuleProvider.get());
  }

  public static CustomCameraXFragmentModule_ProvideCameraXModuleFactory create(
      CustomCameraXFragmentModule module, Provider<Context> contextProvider,
      Provider<CustomAlertModule> alertModuleProvider, Provider<Activity> activityProvider,
      Provider<PikItModule> pickItModuleProvider) {
    return new CustomCameraXFragmentModule_ProvideCameraXModuleFactory(module, contextProvider, alertModuleProvider, activityProvider, pickItModuleProvider);
  }

  public static CameraXModule provideCameraXModule(CustomCameraXFragmentModule instance,
      Context context, CustomAlertModule alertModule, Activity activity, PikItModule pickItModule) {
    return Preconditions.checkNotNullFromProvides(instance.provideCameraXModule(context, alertModule, activity, pickItModule));
  }
}
