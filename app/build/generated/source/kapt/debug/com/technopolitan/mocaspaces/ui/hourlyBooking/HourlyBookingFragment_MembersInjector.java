// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.hourlyBooking;

import com.technopolitan.mocaspaces.di.viewModel.ViewModelFactory;
import com.technopolitan.mocaspaces.modules.NavigationModule;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HourlyBookingFragment_MembersInjector implements MembersInjector<HourlyBookingFragment> {
  private final Provider<ViewModelFactory> viewModelFactoryProvider;

  private final Provider<NavigationModule> navigationModuleProvider;

  public HourlyBookingFragment_MembersInjector(Provider<ViewModelFactory> viewModelFactoryProvider,
      Provider<NavigationModule> navigationModuleProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.navigationModuleProvider = navigationModuleProvider;
  }

  public static MembersInjector<HourlyBookingFragment> create(
      Provider<ViewModelFactory> viewModelFactoryProvider,
      Provider<NavigationModule> navigationModuleProvider) {
    return new HourlyBookingFragment_MembersInjector(viewModelFactoryProvider, navigationModuleProvider);
  }

  @Override
  public void injectMembers(HourlyBookingFragment instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectNavigationModule(instance, navigationModuleProvider.get());
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.hourlyBooking.HourlyBookingFragment.viewModelFactory")
  public static void injectViewModelFactory(HourlyBookingFragment instance,
      ViewModelFactory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.hourlyBooking.HourlyBookingFragment.navigationModule")
  public static void injectNavigationModule(HourlyBookingFragment instance,
      NavigationModule navigationModule) {
    instance.navigationModule = navigationModule;
  }
}
