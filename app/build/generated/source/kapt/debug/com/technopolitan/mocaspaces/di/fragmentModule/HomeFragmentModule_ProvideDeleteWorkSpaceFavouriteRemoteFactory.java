// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.di.fragmentModule;

import com.technopolitan.mocaspaces.data.remote.DeleteWorkSpaceFavouriteRemote;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeFragmentModule_ProvideDeleteWorkSpaceFavouriteRemoteFactory implements Factory<DeleteWorkSpaceFavouriteRemote> {
  private final HomeFragmentModule module;

  public HomeFragmentModule_ProvideDeleteWorkSpaceFavouriteRemoteFactory(
      HomeFragmentModule module) {
    this.module = module;
  }

  @Override
  public DeleteWorkSpaceFavouriteRemote get() {
    return provideDeleteWorkSpaceFavouriteRemote(module);
  }

  public static HomeFragmentModule_ProvideDeleteWorkSpaceFavouriteRemoteFactory create(
      HomeFragmentModule module) {
    return new HomeFragmentModule_ProvideDeleteWorkSpaceFavouriteRemoteFactory(module);
  }

  public static DeleteWorkSpaceFavouriteRemote provideDeleteWorkSpaceFavouriteRemote(
      HomeFragmentModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideDeleteWorkSpaceFavouriteRemote());
  }
}
