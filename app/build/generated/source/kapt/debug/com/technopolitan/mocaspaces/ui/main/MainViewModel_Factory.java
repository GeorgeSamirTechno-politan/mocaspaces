// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.main;

import com.technopolitan.mocaspaces.data.main.CustomBottomNavigationModule;
import com.technopolitan.mocaspaces.data.remote.MainRemote;
import com.technopolitan.mocaspaces.modules.ConnectionLiveDataModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<MainRemote> mainRemoteProvider;

  private final Provider<ConnectionLiveDataModule> connectionLiveDataModuleProvider;

  private final Provider<CustomBottomNavigationModule> customBottomNavigationModuleProvider;

  public MainViewModel_Factory(Provider<MainRemote> mainRemoteProvider,
      Provider<ConnectionLiveDataModule> connectionLiveDataModuleProvider,
      Provider<CustomBottomNavigationModule> customBottomNavigationModuleProvider) {
    this.mainRemoteProvider = mainRemoteProvider;
    this.connectionLiveDataModuleProvider = connectionLiveDataModuleProvider;
    this.customBottomNavigationModuleProvider = customBottomNavigationModuleProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(mainRemoteProvider.get(), connectionLiveDataModuleProvider.get(), customBottomNavigationModuleProvider.get());
  }

  public static MainViewModel_Factory create(Provider<MainRemote> mainRemoteProvider,
      Provider<ConnectionLiveDataModule> connectionLiveDataModuleProvider,
      Provider<CustomBottomNavigationModule> customBottomNavigationModuleProvider) {
    return new MainViewModel_Factory(mainRemoteProvider, connectionLiveDataModuleProvider, customBottomNavigationModuleProvider);
  }

  public static MainViewModel newInstance(MainRemote mainRemote,
      ConnectionLiveDataModule connectionLiveDataModule,
      CustomBottomNavigationModule customBottomNavigationModule) {
    return new MainViewModel(mainRemote, connectionLiveDataModule, customBottomNavigationModule);
  }
}
