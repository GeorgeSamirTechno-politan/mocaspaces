// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.data.home;

import android.content.Context;
import com.technopolitan.mocaspaces.modules.GlideModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MeetingRoomAdapter_Factory implements Factory<MeetingRoomAdapter> {
  private final Provider<GlideModule> glideModuleProvider;

  private final Provider<PriceAdapter> priceAdapterProvider;

  private final Provider<Context> contextProvider;

  public MeetingRoomAdapter_Factory(Provider<GlideModule> glideModuleProvider,
      Provider<PriceAdapter> priceAdapterProvider, Provider<Context> contextProvider) {
    this.glideModuleProvider = glideModuleProvider;
    this.priceAdapterProvider = priceAdapterProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public MeetingRoomAdapter get() {
    return newInstance(glideModuleProvider.get(), priceAdapterProvider.get(), contextProvider.get());
  }

  public static MeetingRoomAdapter_Factory create(Provider<GlideModule> glideModuleProvider,
      Provider<PriceAdapter> priceAdapterProvider, Provider<Context> contextProvider) {
    return new MeetingRoomAdapter_Factory(glideModuleProvider, priceAdapterProvider, contextProvider);
  }

  public static MeetingRoomAdapter newInstance(GlideModule glideModule, PriceAdapter priceAdapter,
      Context context) {
    return new MeetingRoomAdapter(glideModule, priceAdapter, context);
  }
}
