// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.modules;

import android.app.Activity;
import androidx.fragment.app.Fragment;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NavigationModule_Factory implements Factory<NavigationModule> {
  private final Provider<Fragment> fragmentProvider;

  private final Provider<Activity> activityProvider;

  public NavigationModule_Factory(Provider<Fragment> fragmentProvider,
      Provider<Activity> activityProvider) {
    this.fragmentProvider = fragmentProvider;
    this.activityProvider = activityProvider;
  }

  @Override
  public NavigationModule get() {
    return newInstance(fragmentProvider.get(), activityProvider.get());
  }

  public static NavigationModule_Factory create(Provider<Fragment> fragmentProvider,
      Provider<Activity> activityProvider) {
    return new NavigationModule_Factory(fragmentProvider, activityProvider);
  }

  public static NavigationModule newInstance(Fragment fragment, Activity activity) {
    return new NavigationModule(fragment, activity);
  }
}
