// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.di.fragmentModule;

import com.technopolitan.mocaspaces.data.remote.WorkSpaceCalenderRemote;
import com.technopolitan.mocaspaces.data.repo.CalenderRepo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HourlyBookingFragmentModule_ProvideCalenderRepoFactory implements Factory<CalenderRepo> {
  private final HourlyBookingFragmentModule module;

  private final Provider<WorkSpaceCalenderRemote> workSpaceCalenderRemoteProvider;

  public HourlyBookingFragmentModule_ProvideCalenderRepoFactory(HourlyBookingFragmentModule module,
      Provider<WorkSpaceCalenderRemote> workSpaceCalenderRemoteProvider) {
    this.module = module;
    this.workSpaceCalenderRemoteProvider = workSpaceCalenderRemoteProvider;
  }

  @Override
  public CalenderRepo get() {
    return provideCalenderRepo(module, workSpaceCalenderRemoteProvider.get());
  }

  public static HourlyBookingFragmentModule_ProvideCalenderRepoFactory create(
      HourlyBookingFragmentModule module,
      Provider<WorkSpaceCalenderRemote> workSpaceCalenderRemoteProvider) {
    return new HourlyBookingFragmentModule_ProvideCalenderRepoFactory(module, workSpaceCalenderRemoteProvider);
  }

  public static CalenderRepo provideCalenderRepo(HourlyBookingFragmentModule instance,
      WorkSpaceCalenderRemote workSpaceCalenderRemote) {
    return Preconditions.checkNotNullFromProvides(instance.provideCalenderRepo(workSpaceCalenderRemote));
  }
}
