// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.data.shared;

import android.content.Context;
import com.technopolitan.mocaspaces.modules.NavigationModule;
import com.technopolitan.mocaspaces.modules.RXModule;
import com.technopolitan.mocaspaces.modules.SmsIdentifierModule;
import com.technopolitan.mocaspaces.modules.UtilityModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OTPDataModule_Factory implements Factory<OTPDataModule> {
  private final Provider<Context> contextProvider;

  private final Provider<RXModule> rxModuleProvider;

  private final Provider<OtpBlockUserModule> otpBlockUserModuleProvider;

  private final Provider<NavigationModule> navigationModuleProvider;

  private final Provider<SmsIdentifierModule> smsIdentifierModuleProvider;

  private final Provider<UtilityModule> utilityModuleProvider;

  public OTPDataModule_Factory(Provider<Context> contextProvider,
      Provider<RXModule> rxModuleProvider, Provider<OtpBlockUserModule> otpBlockUserModuleProvider,
      Provider<NavigationModule> navigationModuleProvider,
      Provider<SmsIdentifierModule> smsIdentifierModuleProvider,
      Provider<UtilityModule> utilityModuleProvider) {
    this.contextProvider = contextProvider;
    this.rxModuleProvider = rxModuleProvider;
    this.otpBlockUserModuleProvider = otpBlockUserModuleProvider;
    this.navigationModuleProvider = navigationModuleProvider;
    this.smsIdentifierModuleProvider = smsIdentifierModuleProvider;
    this.utilityModuleProvider = utilityModuleProvider;
  }

  @Override
  public OTPDataModule get() {
    return newInstance(contextProvider.get(), rxModuleProvider.get(), otpBlockUserModuleProvider.get(), navigationModuleProvider.get(), smsIdentifierModuleProvider.get(), utilityModuleProvider.get());
  }

  public static OTPDataModule_Factory create(Provider<Context> contextProvider,
      Provider<RXModule> rxModuleProvider, Provider<OtpBlockUserModule> otpBlockUserModuleProvider,
      Provider<NavigationModule> navigationModuleProvider,
      Provider<SmsIdentifierModule> smsIdentifierModuleProvider,
      Provider<UtilityModule> utilityModuleProvider) {
    return new OTPDataModule_Factory(contextProvider, rxModuleProvider, otpBlockUserModuleProvider, navigationModuleProvider, smsIdentifierModuleProvider, utilityModuleProvider);
  }

  public static OTPDataModule newInstance(Context context, RXModule rxModule,
      OtpBlockUserModule otpBlockUserModule, NavigationModule navigationModule,
      SmsIdentifierModule smsIdentifierModule, UtilityModule utilityModule) {
    return new OTPDataModule(context, rxModule, otpBlockUserModule, navigationModule, smsIdentifierModule, utilityModule);
  }
}
