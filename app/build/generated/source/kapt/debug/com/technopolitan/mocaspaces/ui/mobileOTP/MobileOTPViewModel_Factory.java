// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.mobileOTP;

import com.technopolitan.mocaspaces.data.remote.CheckMobileRemote;
import com.technopolitan.mocaspaces.data.remote.VerifyMobileOtpRemote;
import com.technopolitan.mocaspaces.data.shared.OTPDataModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MobileOTPViewModel_Factory implements Factory<MobileOTPViewModel> {
  private final Provider<OTPDataModule> otpDataModuleProvider;

  private final Provider<CheckMobileRemote> checkMobileRemoteProvider;

  private final Provider<VerifyMobileOtpRemote> verifyMobileOtpRemoteProvider;

  public MobileOTPViewModel_Factory(Provider<OTPDataModule> otpDataModuleProvider,
      Provider<CheckMobileRemote> checkMobileRemoteProvider,
      Provider<VerifyMobileOtpRemote> verifyMobileOtpRemoteProvider) {
    this.otpDataModuleProvider = otpDataModuleProvider;
    this.checkMobileRemoteProvider = checkMobileRemoteProvider;
    this.verifyMobileOtpRemoteProvider = verifyMobileOtpRemoteProvider;
  }

  @Override
  public MobileOTPViewModel get() {
    return newInstance(otpDataModuleProvider.get(), checkMobileRemoteProvider.get(), verifyMobileOtpRemoteProvider.get());
  }

  public static MobileOTPViewModel_Factory create(Provider<OTPDataModule> otpDataModuleProvider,
      Provider<CheckMobileRemote> checkMobileRemoteProvider,
      Provider<VerifyMobileOtpRemote> verifyMobileOtpRemoteProvider) {
    return new MobileOTPViewModel_Factory(otpDataModuleProvider, checkMobileRemoteProvider, verifyMobileOtpRemoteProvider);
  }

  public static MobileOTPViewModel newInstance(OTPDataModule otpDataModule,
      CheckMobileRemote checkMobileRemote, VerifyMobileOtpRemote verifyMobileOtpRemote) {
    return new MobileOTPViewModel(otpDataModule, checkMobileRemote, verifyMobileOtpRemote);
  }
}
