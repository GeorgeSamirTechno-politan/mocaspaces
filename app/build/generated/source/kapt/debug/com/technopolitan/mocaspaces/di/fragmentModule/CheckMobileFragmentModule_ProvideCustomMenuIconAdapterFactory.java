// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.di.fragmentModule;

import com.technopolitan.mocaspaces.data.customPowerMenu.CustomIconMenuAdapter;
import com.technopolitan.mocaspaces.modules.GlideModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CheckMobileFragmentModule_ProvideCustomMenuIconAdapterFactory implements Factory<CustomIconMenuAdapter> {
  private final CheckMobileFragmentModule module;

  private final Provider<GlideModule> glideModuleProvider;

  public CheckMobileFragmentModule_ProvideCustomMenuIconAdapterFactory(
      CheckMobileFragmentModule module, Provider<GlideModule> glideModuleProvider) {
    this.module = module;
    this.glideModuleProvider = glideModuleProvider;
  }

  @Override
  public CustomIconMenuAdapter get() {
    return provideCustomMenuIconAdapter(module, glideModuleProvider.get());
  }

  public static CheckMobileFragmentModule_ProvideCustomMenuIconAdapterFactory create(
      CheckMobileFragmentModule module, Provider<GlideModule> glideModuleProvider) {
    return new CheckMobileFragmentModule_ProvideCustomMenuIconAdapterFactory(module, glideModuleProvider);
  }

  public static CustomIconMenuAdapter provideCustomMenuIconAdapter(
      CheckMobileFragmentModule instance, GlideModule glideModule) {
    return Preconditions.checkNotNullFromProvides(instance.provideCustomMenuIconAdapter(glideModule));
  }
}
