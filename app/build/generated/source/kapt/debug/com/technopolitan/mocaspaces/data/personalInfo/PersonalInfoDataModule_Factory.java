// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.data.personalInfo;

import android.content.Context;
import com.technopolitan.mocaspaces.data.memberType.MemberTypeAdapter;
import com.technopolitan.mocaspaces.data.shared.CountDownModule;
import com.technopolitan.mocaspaces.modules.DateTimeModule;
import com.technopolitan.mocaspaces.modules.DialogModule;
import com.technopolitan.mocaspaces.modules.GlideModule;
import com.technopolitan.mocaspaces.modules.PixModule;
import com.technopolitan.mocaspaces.modules.RXModule;
import com.technopolitan.mocaspaces.modules.UtilityModule;
import com.technopolitan.mocaspaces.modules.ValidationModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PersonalInfoDataModule_Factory implements Factory<PersonalInfoDataModule> {
  private final Provider<Context> contextProvider;

  private final Provider<RXModule> rxModuleProvider;

  private final Provider<PixModule> pixModuleProvider;

  private final Provider<ValidationModule> validationModuleProvider;

  private final Provider<CountDownModule> countDownModuleProvider;

  private final Provider<GlideModule> glideModuleProvider;

  private final Provider<MemberTypeAdapter> memberTypeAdapterProvider;

  private final Provider<DialogModule> dialogModuleProvider;

  private final Provider<DateTimeModule> dateTimeModuleProvider;

  private final Provider<UtilityModule> utilityModuleProvider;

  public PersonalInfoDataModule_Factory(Provider<Context> contextProvider,
      Provider<RXModule> rxModuleProvider, Provider<PixModule> pixModuleProvider,
      Provider<ValidationModule> validationModuleProvider,
      Provider<CountDownModule> countDownModuleProvider, Provider<GlideModule> glideModuleProvider,
      Provider<MemberTypeAdapter> memberTypeAdapterProvider,
      Provider<DialogModule> dialogModuleProvider, Provider<DateTimeModule> dateTimeModuleProvider,
      Provider<UtilityModule> utilityModuleProvider) {
    this.contextProvider = contextProvider;
    this.rxModuleProvider = rxModuleProvider;
    this.pixModuleProvider = pixModuleProvider;
    this.validationModuleProvider = validationModuleProvider;
    this.countDownModuleProvider = countDownModuleProvider;
    this.glideModuleProvider = glideModuleProvider;
    this.memberTypeAdapterProvider = memberTypeAdapterProvider;
    this.dialogModuleProvider = dialogModuleProvider;
    this.dateTimeModuleProvider = dateTimeModuleProvider;
    this.utilityModuleProvider = utilityModuleProvider;
  }

  @Override
  public PersonalInfoDataModule get() {
    return newInstance(contextProvider.get(), rxModuleProvider.get(), pixModuleProvider.get(), validationModuleProvider.get(), countDownModuleProvider.get(), glideModuleProvider.get(), memberTypeAdapterProvider.get(), dialogModuleProvider.get(), dateTimeModuleProvider.get(), utilityModuleProvider.get());
  }

  public static PersonalInfoDataModule_Factory create(Provider<Context> contextProvider,
      Provider<RXModule> rxModuleProvider, Provider<PixModule> pixModuleProvider,
      Provider<ValidationModule> validationModuleProvider,
      Provider<CountDownModule> countDownModuleProvider, Provider<GlideModule> glideModuleProvider,
      Provider<MemberTypeAdapter> memberTypeAdapterProvider,
      Provider<DialogModule> dialogModuleProvider, Provider<DateTimeModule> dateTimeModuleProvider,
      Provider<UtilityModule> utilityModuleProvider) {
    return new PersonalInfoDataModule_Factory(contextProvider, rxModuleProvider, pixModuleProvider, validationModuleProvider, countDownModuleProvider, glideModuleProvider, memberTypeAdapterProvider, dialogModuleProvider, dateTimeModuleProvider, utilityModuleProvider);
  }

  public static PersonalInfoDataModule newInstance(Context context, RXModule rxModule,
      PixModule pixModule, ValidationModule validationModule, CountDownModule countDownModule,
      GlideModule glideModule, MemberTypeAdapter memberTypeAdapter, DialogModule dialogModule,
      DateTimeModule dateTimeModule, UtilityModule utilityModule) {
    return new PersonalInfoDataModule(context, rxModule, pixModule, validationModule, countDownModule, glideModule, memberTypeAdapter, dialogModule, dateTimeModule, utilityModule);
  }
}
