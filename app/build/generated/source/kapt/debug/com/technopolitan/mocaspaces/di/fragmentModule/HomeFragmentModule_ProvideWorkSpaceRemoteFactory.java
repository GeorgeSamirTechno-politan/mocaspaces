// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.di.fragmentModule;

import com.technopolitan.mocaspaces.data.remote.WorkSpaceRemote;
import com.technopolitan.mocaspaces.modules.DateTimeModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeFragmentModule_ProvideWorkSpaceRemoteFactory implements Factory<WorkSpaceRemote> {
  private final HomeFragmentModule module;

  private final Provider<DateTimeModule> dateTimeModuleProvider;

  public HomeFragmentModule_ProvideWorkSpaceRemoteFactory(HomeFragmentModule module,
      Provider<DateTimeModule> dateTimeModuleProvider) {
    this.module = module;
    this.dateTimeModuleProvider = dateTimeModuleProvider;
  }

  @Override
  public WorkSpaceRemote get() {
    return provideWorkSpaceRemote(module, dateTimeModuleProvider.get());
  }

  public static HomeFragmentModule_ProvideWorkSpaceRemoteFactory create(HomeFragmentModule module,
      Provider<DateTimeModule> dateTimeModuleProvider) {
    return new HomeFragmentModule_ProvideWorkSpaceRemoteFactory(module, dateTimeModuleProvider);
  }

  public static WorkSpaceRemote provideWorkSpaceRemote(HomeFragmentModule instance,
      DateTimeModule dateTimeModule) {
    return Preconditions.checkNotNullFromProvides(instance.provideWorkSpaceRemote(dateTimeModule));
  }
}
