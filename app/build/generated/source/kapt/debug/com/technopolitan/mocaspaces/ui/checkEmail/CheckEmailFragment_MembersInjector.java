// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.checkEmail;

import com.technopolitan.mocaspaces.modules.ApiResponseModule;
import com.technopolitan.mocaspaces.modules.NavigationModule;
import com.technopolitan.mocaspaces.modules.UtilityModule;
import com.technopolitan.mocaspaces.ui.register.RegisterViewModel;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CheckEmailFragment_MembersInjector implements MembersInjector<CheckEmailFragment> {
  private final Provider<NavigationModule> navigationModuleProvider;

  private final Provider<RegisterViewModel> registerViewModelProvider;

  private final Provider<CheckEmailViewModel> viewModelProvider;

  private final Provider<ApiResponseModule<String>> sendEmailOtpApiHandlerProvider;

  private final Provider<ApiResponseModule<String>> verifyOtpApiHandlerProvider;

  private final Provider<UtilityModule> utilityModuleProvider;

  public CheckEmailFragment_MembersInjector(Provider<NavigationModule> navigationModuleProvider,
      Provider<RegisterViewModel> registerViewModelProvider,
      Provider<CheckEmailViewModel> viewModelProvider,
      Provider<ApiResponseModule<String>> sendEmailOtpApiHandlerProvider,
      Provider<ApiResponseModule<String>> verifyOtpApiHandlerProvider,
      Provider<UtilityModule> utilityModuleProvider) {
    this.navigationModuleProvider = navigationModuleProvider;
    this.registerViewModelProvider = registerViewModelProvider;
    this.viewModelProvider = viewModelProvider;
    this.sendEmailOtpApiHandlerProvider = sendEmailOtpApiHandlerProvider;
    this.verifyOtpApiHandlerProvider = verifyOtpApiHandlerProvider;
    this.utilityModuleProvider = utilityModuleProvider;
  }

  public static MembersInjector<CheckEmailFragment> create(
      Provider<NavigationModule> navigationModuleProvider,
      Provider<RegisterViewModel> registerViewModelProvider,
      Provider<CheckEmailViewModel> viewModelProvider,
      Provider<ApiResponseModule<String>> sendEmailOtpApiHandlerProvider,
      Provider<ApiResponseModule<String>> verifyOtpApiHandlerProvider,
      Provider<UtilityModule> utilityModuleProvider) {
    return new CheckEmailFragment_MembersInjector(navigationModuleProvider, registerViewModelProvider, viewModelProvider, sendEmailOtpApiHandlerProvider, verifyOtpApiHandlerProvider, utilityModuleProvider);
  }

  @Override
  public void injectMembers(CheckEmailFragment instance) {
    injectNavigationModule(instance, navigationModuleProvider.get());
    injectRegisterViewModel(instance, registerViewModelProvider.get());
    injectViewModel(instance, viewModelProvider.get());
    injectSendEmailOtpApiHandler(instance, sendEmailOtpApiHandlerProvider.get());
    injectVerifyOtpApiHandler(instance, verifyOtpApiHandlerProvider.get());
    injectUtilityModule(instance, utilityModuleProvider.get());
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.checkEmail.CheckEmailFragment.navigationModule")
  public static void injectNavigationModule(CheckEmailFragment instance,
      NavigationModule navigationModule) {
    instance.navigationModule = navigationModule;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.checkEmail.CheckEmailFragment.registerViewModel")
  public static void injectRegisterViewModel(CheckEmailFragment instance,
      RegisterViewModel registerViewModel) {
    instance.registerViewModel = registerViewModel;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.checkEmail.CheckEmailFragment.viewModel")
  public static void injectViewModel(CheckEmailFragment instance, CheckEmailViewModel viewModel) {
    instance.viewModel = viewModel;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.checkEmail.CheckEmailFragment.sendEmailOtpApiHandler")
  public static void injectSendEmailOtpApiHandler(CheckEmailFragment instance,
      ApiResponseModule<String> sendEmailOtpApiHandler) {
    instance.sendEmailOtpApiHandler = sendEmailOtpApiHandler;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.checkEmail.CheckEmailFragment.verifyOtpApiHandler")
  public static void injectVerifyOtpApiHandler(CheckEmailFragment instance,
      ApiResponseModule<String> verifyOtpApiHandler) {
    instance.verifyOtpApiHandler = verifyOtpApiHandler;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.checkEmail.CheckEmailFragment.utilityModule")
  public static void injectUtilityModule(CheckEmailFragment instance, UtilityModule utilityModule) {
    instance.utilityModule = utilityModule;
  }
}
