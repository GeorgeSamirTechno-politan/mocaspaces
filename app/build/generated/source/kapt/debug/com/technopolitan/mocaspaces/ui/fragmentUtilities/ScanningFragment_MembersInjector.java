// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.fragmentUtilities;

import com.technopolitan.mocaspaces.modules.CompressModule;
import com.technopolitan.mocaspaces.modules.FaceDetectionModule;
import com.technopolitan.mocaspaces.modules.NavigationModule;
import com.technopolitan.mocaspaces.modules.UtilityModule;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ScanningFragment_MembersInjector implements MembersInjector<ScanningFragment> {
  private final Provider<FaceDetectionModule> faceDetectionModuleProvider;

  private final Provider<NavigationModule> navigationModuleProvider;

  private final Provider<CompressModule> compressModuleProvider;

  private final Provider<UtilityModule> utilityModuleProvider;

  public ScanningFragment_MembersInjector(Provider<FaceDetectionModule> faceDetectionModuleProvider,
      Provider<NavigationModule> navigationModuleProvider,
      Provider<CompressModule> compressModuleProvider,
      Provider<UtilityModule> utilityModuleProvider) {
    this.faceDetectionModuleProvider = faceDetectionModuleProvider;
    this.navigationModuleProvider = navigationModuleProvider;
    this.compressModuleProvider = compressModuleProvider;
    this.utilityModuleProvider = utilityModuleProvider;
  }

  public static MembersInjector<ScanningFragment> create(
      Provider<FaceDetectionModule> faceDetectionModuleProvider,
      Provider<NavigationModule> navigationModuleProvider,
      Provider<CompressModule> compressModuleProvider,
      Provider<UtilityModule> utilityModuleProvider) {
    return new ScanningFragment_MembersInjector(faceDetectionModuleProvider, navigationModuleProvider, compressModuleProvider, utilityModuleProvider);
  }

  @Override
  public void injectMembers(ScanningFragment instance) {
    injectFaceDetectionModule(instance, faceDetectionModuleProvider.get());
    injectNavigationModule(instance, navigationModuleProvider.get());
    injectCompressModule(instance, compressModuleProvider.get());
    injectUtilityModule(instance, utilityModuleProvider.get());
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.fragmentUtilities.ScanningFragment.faceDetectionModule")
  public static void injectFaceDetectionModule(ScanningFragment instance,
      FaceDetectionModule faceDetectionModule) {
    instance.faceDetectionModule = faceDetectionModule;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.fragmentUtilities.ScanningFragment.navigationModule")
  public static void injectNavigationModule(ScanningFragment instance,
      NavigationModule navigationModule) {
    instance.navigationModule = navigationModule;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.fragmentUtilities.ScanningFragment.compressModule")
  public static void injectCompressModule(ScanningFragment instance,
      CompressModule compressModule) {
    instance.compressModule = compressModule;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.fragmentUtilities.ScanningFragment.utilityModule")
  public static void injectUtilityModule(ScanningFragment instance, UtilityModule utilityModule) {
    instance.utilityModule = utilityModule;
  }
}
