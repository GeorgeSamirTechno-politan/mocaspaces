// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.di.fragmentModule;

import com.technopolitan.mocaspaces.data.remote.ResetPasswordRemote;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ResetPasswordFragmentModule_ProvideResetPasswordRemoteFactory implements Factory<ResetPasswordRemote> {
  private final ResetPasswordFragmentModule module;

  public ResetPasswordFragmentModule_ProvideResetPasswordRemoteFactory(
      ResetPasswordFragmentModule module) {
    this.module = module;
  }

  @Override
  public ResetPasswordRemote get() {
    return provideResetPasswordRemote(module);
  }

  public static ResetPasswordFragmentModule_ProvideResetPasswordRemoteFactory create(
      ResetPasswordFragmentModule module) {
    return new ResetPasswordFragmentModule_ProvideResetPasswordRemoteFactory(module);
  }

  public static ResetPasswordRemote provideResetPasswordRemote(
      ResetPasswordFragmentModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideResetPasswordRemote());
  }
}
