// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.di.fragmentModule;

import com.technopolitan.mocaspaces.data.remote.MainRemote;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class StartFragmentModule_ProvideMainRemoteFactory implements Factory<MainRemote> {
  private final StartFragmentModule module;

  public StartFragmentModule_ProvideMainRemoteFactory(StartFragmentModule module) {
    this.module = module;
  }

  @Override
  public MainRemote get() {
    return provideMainRemote(module);
  }

  public static StartFragmentModule_ProvideMainRemoteFactory create(StartFragmentModule module) {
    return new StartFragmentModule_ProvideMainRemoteFactory(module);
  }

  public static MainRemote provideMainRemote(StartFragmentModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideMainRemote());
  }
}
