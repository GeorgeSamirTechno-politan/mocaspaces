// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.home;

import com.technopolitan.mocaspaces.data.remote.AddFavouriteWorkSpaceRemote;
import com.technopolitan.mocaspaces.data.remote.DeleteWorkSpaceFavouriteRemote;
import com.technopolitan.mocaspaces.modules.ApiResponseModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FavouriteViewModel_Factory implements Factory<FavouriteViewModel> {
  private final Provider<AddFavouriteWorkSpaceRemote> addFavouriteWorkSpaceRemoteProvider;

  private final Provider<DeleteWorkSpaceFavouriteRemote> deleteWorkSpaceFavouriteRemoteProvider;

  private final Provider<ApiResponseModule<String>> apiResponseModuleProvider;

  public FavouriteViewModel_Factory(
      Provider<AddFavouriteWorkSpaceRemote> addFavouriteWorkSpaceRemoteProvider,
      Provider<DeleteWorkSpaceFavouriteRemote> deleteWorkSpaceFavouriteRemoteProvider,
      Provider<ApiResponseModule<String>> apiResponseModuleProvider) {
    this.addFavouriteWorkSpaceRemoteProvider = addFavouriteWorkSpaceRemoteProvider;
    this.deleteWorkSpaceFavouriteRemoteProvider = deleteWorkSpaceFavouriteRemoteProvider;
    this.apiResponseModuleProvider = apiResponseModuleProvider;
  }

  @Override
  public FavouriteViewModel get() {
    return newInstance(addFavouriteWorkSpaceRemoteProvider.get(), deleteWorkSpaceFavouriteRemoteProvider.get(), apiResponseModuleProvider.get());
  }

  public static FavouriteViewModel_Factory create(
      Provider<AddFavouriteWorkSpaceRemote> addFavouriteWorkSpaceRemoteProvider,
      Provider<DeleteWorkSpaceFavouriteRemote> deleteWorkSpaceFavouriteRemoteProvider,
      Provider<ApiResponseModule<String>> apiResponseModuleProvider) {
    return new FavouriteViewModel_Factory(addFavouriteWorkSpaceRemoteProvider, deleteWorkSpaceFavouriteRemoteProvider, apiResponseModuleProvider);
  }

  public static FavouriteViewModel newInstance(
      AddFavouriteWorkSpaceRemote addFavouriteWorkSpaceRemote,
      DeleteWorkSpaceFavouriteRemote deleteWorkSpaceFavouriteRemote,
      ApiResponseModule<String> apiResponseModule) {
    return new FavouriteViewModel(addFavouriteWorkSpaceRemote, deleteWorkSpaceFavouriteRemote, apiResponseModule);
  }
}
