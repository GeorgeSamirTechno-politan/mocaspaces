// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.home;

import com.technopolitan.mocaspaces.data.remote.EventSpaceRemote;
import com.technopolitan.mocaspaces.data.remote.MeetingRoomRemote;
import com.technopolitan.mocaspaces.data.remote.WorkSpaceRemote;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<WorkSpaceRemote> workSpaceRemoteProvider;

  private final Provider<MeetingRoomRemote> meetingRoomRemoteProvider;

  private final Provider<EventSpaceRemote> eventSpaceRemoteProvider;

  public HomeViewModel_Factory(Provider<WorkSpaceRemote> workSpaceRemoteProvider,
      Provider<MeetingRoomRemote> meetingRoomRemoteProvider,
      Provider<EventSpaceRemote> eventSpaceRemoteProvider) {
    this.workSpaceRemoteProvider = workSpaceRemoteProvider;
    this.meetingRoomRemoteProvider = meetingRoomRemoteProvider;
    this.eventSpaceRemoteProvider = eventSpaceRemoteProvider;
  }

  @Override
  public HomeViewModel get() {
    return newInstance(workSpaceRemoteProvider.get(), meetingRoomRemoteProvider.get(), eventSpaceRemoteProvider.get());
  }

  public static HomeViewModel_Factory create(Provider<WorkSpaceRemote> workSpaceRemoteProvider,
      Provider<MeetingRoomRemote> meetingRoomRemoteProvider,
      Provider<EventSpaceRemote> eventSpaceRemoteProvider) {
    return new HomeViewModel_Factory(workSpaceRemoteProvider, meetingRoomRemoteProvider, eventSpaceRemoteProvider);
  }

  public static HomeViewModel newInstance(WorkSpaceRemote workSpaceRemote,
      MeetingRoomRemote meetingRoomRemote, EventSpaceRemote eventSpaceRemote) {
    return new HomeViewModel(workSpaceRemote, meetingRoomRemote, eventSpaceRemote);
  }
}
