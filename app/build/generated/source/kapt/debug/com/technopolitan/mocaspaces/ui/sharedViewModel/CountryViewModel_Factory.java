// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.sharedViewModel;

import com.technopolitan.mocaspaces.data.remote.CountryRemote;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CountryViewModel_Factory implements Factory<CountryViewModel> {
  private final Provider<CountryRemote> countryRemoteProvider;

  public CountryViewModel_Factory(Provider<CountryRemote> countryRemoteProvider) {
    this.countryRemoteProvider = countryRemoteProvider;
  }

  @Override
  public CountryViewModel get() {
    return newInstance(countryRemoteProvider.get());
  }

  public static CountryViewModel_Factory create(Provider<CountryRemote> countryRemoteProvider) {
    return new CountryViewModel_Factory(countryRemoteProvider);
  }

  public static CountryViewModel newInstance(CountryRemote countryRemote) {
    return new CountryViewModel(countryRemote);
  }
}
