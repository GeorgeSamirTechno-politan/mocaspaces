// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.modules;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_Factory implements Factory<NetworkModule> {
  private final Provider<OkHttpClient> okHttpClientProvider;

  private final Provider<Context> contextProvider;

  private final Provider<SharedPrefModule> sharedPrefModuleProvider;

  public NetworkModule_Factory(Provider<OkHttpClient> okHttpClientProvider,
      Provider<Context> contextProvider, Provider<SharedPrefModule> sharedPrefModuleProvider) {
    this.okHttpClientProvider = okHttpClientProvider;
    this.contextProvider = contextProvider;
    this.sharedPrefModuleProvider = sharedPrefModuleProvider;
  }

  @Override
  public NetworkModule get() {
    return newInstance(okHttpClientProvider.get(), contextProvider.get(), sharedPrefModuleProvider.get());
  }

  public static NetworkModule_Factory create(Provider<OkHttpClient> okHttpClientProvider,
      Provider<Context> contextProvider, Provider<SharedPrefModule> sharedPrefModuleProvider) {
    return new NetworkModule_Factory(okHttpClientProvider, contextProvider, sharedPrefModuleProvider);
  }

  public static NetworkModule newInstance(OkHttpClient okHttpClient, Context context,
      SharedPrefModule sharedPrefModule) {
    return new NetworkModule(okHttpClient, context, sharedPrefModule);
  }
}
