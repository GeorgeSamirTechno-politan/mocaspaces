// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.di.fragmentModule;

import android.content.Context;
import com.technopolitan.mocaspaces.data.remote.WorkSpaceDetailsRemote;
import com.technopolitan.mocaspaces.modules.DateTimeModule;
import com.technopolitan.mocaspaces.modules.SpannableStringModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocationDetailsFragmentModule_ProvideWorkSpaceDetailsRemoteFactory implements Factory<WorkSpaceDetailsRemote> {
  private final LocationDetailsFragmentModule module;

  private final Provider<Context> contextProvider;

  private final Provider<SpannableStringModule> spannableStringModuleProvider;

  private final Provider<DateTimeModule> dateTimeModuleProvider;

  public LocationDetailsFragmentModule_ProvideWorkSpaceDetailsRemoteFactory(
      LocationDetailsFragmentModule module, Provider<Context> contextProvider,
      Provider<SpannableStringModule> spannableStringModuleProvider,
      Provider<DateTimeModule> dateTimeModuleProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.spannableStringModuleProvider = spannableStringModuleProvider;
    this.dateTimeModuleProvider = dateTimeModuleProvider;
  }

  @Override
  public WorkSpaceDetailsRemote get() {
    return provideWorkSpaceDetailsRemote(module, contextProvider.get(), spannableStringModuleProvider.get(), dateTimeModuleProvider.get());
  }

  public static LocationDetailsFragmentModule_ProvideWorkSpaceDetailsRemoteFactory create(
      LocationDetailsFragmentModule module, Provider<Context> contextProvider,
      Provider<SpannableStringModule> spannableStringModuleProvider,
      Provider<DateTimeModule> dateTimeModuleProvider) {
    return new LocationDetailsFragmentModule_ProvideWorkSpaceDetailsRemoteFactory(module, contextProvider, spannableStringModuleProvider, dateTimeModuleProvider);
  }

  public static WorkSpaceDetailsRemote provideWorkSpaceDetailsRemote(
      LocationDetailsFragmentModule instance, Context context,
      SpannableStringModule spannableStringModule, DateTimeModule dateTimeModule) {
    return Preconditions.checkNotNullFromProvides(instance.provideWorkSpaceDetailsRemote(context, spannableStringModule, dateTimeModule));
  }
}
