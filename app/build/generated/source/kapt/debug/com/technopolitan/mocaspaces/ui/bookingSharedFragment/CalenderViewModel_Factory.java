// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.bookingSharedFragment;

import com.technopolitan.mocaspaces.data.bookingShared.MonthDayDataModule;
import com.technopolitan.mocaspaces.data.bookingShared.SingleMultiplyDataModule;
import com.technopolitan.mocaspaces.data.repo.CalenderRepo;
import com.technopolitan.mocaspaces.modules.DateTimeModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CalenderViewModel_Factory implements Factory<CalenderViewModel> {
  private final Provider<CalenderRepo> calenderRepoProvider;

  private final Provider<MonthDayDataModule> monthDayDataModuleProvider;

  private final Provider<SingleMultiplyDataModule> singleMultiplyDataModuleProvider;

  private final Provider<DateTimeModule> dateTimeModuleProvider;

  public CalenderViewModel_Factory(Provider<CalenderRepo> calenderRepoProvider,
      Provider<MonthDayDataModule> monthDayDataModuleProvider,
      Provider<SingleMultiplyDataModule> singleMultiplyDataModuleProvider,
      Provider<DateTimeModule> dateTimeModuleProvider) {
    this.calenderRepoProvider = calenderRepoProvider;
    this.monthDayDataModuleProvider = monthDayDataModuleProvider;
    this.singleMultiplyDataModuleProvider = singleMultiplyDataModuleProvider;
    this.dateTimeModuleProvider = dateTimeModuleProvider;
  }

  @Override
  public CalenderViewModel get() {
    return newInstance(calenderRepoProvider.get(), monthDayDataModuleProvider.get(), singleMultiplyDataModuleProvider.get(), dateTimeModuleProvider.get());
  }

  public static CalenderViewModel_Factory create(Provider<CalenderRepo> calenderRepoProvider,
      Provider<MonthDayDataModule> monthDayDataModuleProvider,
      Provider<SingleMultiplyDataModule> singleMultiplyDataModuleProvider,
      Provider<DateTimeModule> dateTimeModuleProvider) {
    return new CalenderViewModel_Factory(calenderRepoProvider, monthDayDataModuleProvider, singleMultiplyDataModuleProvider, dateTimeModuleProvider);
  }

  public static CalenderViewModel newInstance(CalenderRepo calenderRepo,
      MonthDayDataModule monthDayDataModule, SingleMultiplyDataModule singleMultiplyDataModule,
      DateTimeModule dateTimeModule) {
    return new CalenderViewModel(calenderRepo, monthDayDataModule, singleMultiplyDataModule, dateTimeModule);
  }
}
