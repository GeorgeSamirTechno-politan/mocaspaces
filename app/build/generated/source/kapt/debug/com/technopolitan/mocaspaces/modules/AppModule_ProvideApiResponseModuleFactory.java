// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.modules;

import android.app.Activity;
import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideApiResponseModuleFactory implements Factory<ApiResponseModule<Object>> {
  private final AppModule module;

  private final Provider<DialogModule> dialogModuleProvider;

  private final Provider<Context> contextProvider;

  private final Provider<CustomAlertModule> customToastModuleProvider;

  private final Provider<Activity> activityProvider;

  public AppModule_ProvideApiResponseModuleFactory(AppModule module,
      Provider<DialogModule> dialogModuleProvider, Provider<Context> contextProvider,
      Provider<CustomAlertModule> customToastModuleProvider, Provider<Activity> activityProvider) {
    this.module = module;
    this.dialogModuleProvider = dialogModuleProvider;
    this.contextProvider = contextProvider;
    this.customToastModuleProvider = customToastModuleProvider;
    this.activityProvider = activityProvider;
  }

  @Override
  public ApiResponseModule<Object> get() {
    return provideApiResponseModule(module, dialogModuleProvider.get(), contextProvider.get(), customToastModuleProvider.get(), activityProvider.get());
  }

  public static AppModule_ProvideApiResponseModuleFactory create(AppModule module,
      Provider<DialogModule> dialogModuleProvider, Provider<Context> contextProvider,
      Provider<CustomAlertModule> customToastModuleProvider, Provider<Activity> activityProvider) {
    return new AppModule_ProvideApiResponseModuleFactory(module, dialogModuleProvider, contextProvider, customToastModuleProvider, activityProvider);
  }

  public static ApiResponseModule<Object> provideApiResponseModule(AppModule instance,
      DialogModule dialogModule, Context context, CustomAlertModule customToastModule,
      Activity activity) {
    return Preconditions.checkNotNullFromProvides(instance.provideApiResponseModule(dialogModule, context, customToastModule, activity));
  }
}
