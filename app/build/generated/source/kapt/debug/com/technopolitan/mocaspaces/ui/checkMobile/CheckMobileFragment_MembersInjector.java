// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.checkMobile;

import com.technopolitan.mocaspaces.data.country.CountryDataModule;
import com.technopolitan.mocaspaces.data.country.CountryMapper;
import com.technopolitan.mocaspaces.modules.ApiResponseModule;
import com.technopolitan.mocaspaces.modules.NavigationModule;
import com.technopolitan.mocaspaces.ui.register.RegisterViewModel;
import com.technopolitan.mocaspaces.ui.sharedViewModel.CountryViewModel;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import java.util.List;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CheckMobileFragment_MembersInjector implements MembersInjector<CheckMobileFragment> {
  private final Provider<CountryDataModule> countryDataModuleProvider;

  private final Provider<ApiResponseModule<List<CountryMapper>>> countryResponseHandlerProvider;

  private final Provider<ApiResponseModule<String>> verifyMobileHandlerProvider;

  private final Provider<CheckMobileViewModel> checkMobileViewModelProvider;

  private final Provider<CountryViewModel> countryViewModelProvider;

  private final Provider<NavigationModule> navigationModuleProvider;

  private final Provider<RegisterViewModel> registerViewModelProvider;

  public CheckMobileFragment_MembersInjector(Provider<CountryDataModule> countryDataModuleProvider,
      Provider<ApiResponseModule<List<CountryMapper>>> countryResponseHandlerProvider,
      Provider<ApiResponseModule<String>> verifyMobileHandlerProvider,
      Provider<CheckMobileViewModel> checkMobileViewModelProvider,
      Provider<CountryViewModel> countryViewModelProvider,
      Provider<NavigationModule> navigationModuleProvider,
      Provider<RegisterViewModel> registerViewModelProvider) {
    this.countryDataModuleProvider = countryDataModuleProvider;
    this.countryResponseHandlerProvider = countryResponseHandlerProvider;
    this.verifyMobileHandlerProvider = verifyMobileHandlerProvider;
    this.checkMobileViewModelProvider = checkMobileViewModelProvider;
    this.countryViewModelProvider = countryViewModelProvider;
    this.navigationModuleProvider = navigationModuleProvider;
    this.registerViewModelProvider = registerViewModelProvider;
  }

  public static MembersInjector<CheckMobileFragment> create(
      Provider<CountryDataModule> countryDataModuleProvider,
      Provider<ApiResponseModule<List<CountryMapper>>> countryResponseHandlerProvider,
      Provider<ApiResponseModule<String>> verifyMobileHandlerProvider,
      Provider<CheckMobileViewModel> checkMobileViewModelProvider,
      Provider<CountryViewModel> countryViewModelProvider,
      Provider<NavigationModule> navigationModuleProvider,
      Provider<RegisterViewModel> registerViewModelProvider) {
    return new CheckMobileFragment_MembersInjector(countryDataModuleProvider, countryResponseHandlerProvider, verifyMobileHandlerProvider, checkMobileViewModelProvider, countryViewModelProvider, navigationModuleProvider, registerViewModelProvider);
  }

  @Override
  public void injectMembers(CheckMobileFragment instance) {
    injectCountryDataModule(instance, countryDataModuleProvider.get());
    injectCountryResponseHandler(instance, countryResponseHandlerProvider.get());
    injectVerifyMobileHandler(instance, verifyMobileHandlerProvider.get());
    injectCheckMobileViewModel(instance, checkMobileViewModelProvider.get());
    injectCountryViewModel(instance, countryViewModelProvider.get());
    injectNavigationModule(instance, navigationModuleProvider.get());
    injectRegisterViewModel(instance, registerViewModelProvider.get());
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.checkMobile.CheckMobileFragment.countryDataModule")
  public static void injectCountryDataModule(CheckMobileFragment instance,
      CountryDataModule countryDataModule) {
    instance.countryDataModule = countryDataModule;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.checkMobile.CheckMobileFragment.countryResponseHandler")
  public static void injectCountryResponseHandler(CheckMobileFragment instance,
      ApiResponseModule<List<CountryMapper>> countryResponseHandler) {
    instance.countryResponseHandler = countryResponseHandler;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.checkMobile.CheckMobileFragment.verifyMobileHandler")
  public static void injectVerifyMobileHandler(CheckMobileFragment instance,
      ApiResponseModule<String> verifyMobileHandler) {
    instance.verifyMobileHandler = verifyMobileHandler;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.checkMobile.CheckMobileFragment.checkMobileViewModel")
  public static void injectCheckMobileViewModel(CheckMobileFragment instance,
      CheckMobileViewModel checkMobileViewModel) {
    instance.checkMobileViewModel = checkMobileViewModel;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.checkMobile.CheckMobileFragment.countryViewModel")
  public static void injectCountryViewModel(CheckMobileFragment instance,
      CountryViewModel countryViewModel) {
    instance.countryViewModel = countryViewModel;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.checkMobile.CheckMobileFragment.navigationModule")
  public static void injectNavigationModule(CheckMobileFragment instance,
      NavigationModule navigationModule) {
    instance.navigationModule = navigationModule;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.checkMobile.CheckMobileFragment.registerViewModel")
  public static void injectRegisterViewModel(CheckMobileFragment instance,
      RegisterViewModel registerViewModel) {
    instance.registerViewModel = registerViewModel;
  }
}
