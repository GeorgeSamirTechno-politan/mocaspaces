// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.modules;

import android.content.Context;
import com.technopolitan.mocaspaces.data.shared.CountDownModule;
import com.technopolitan.mocaspaces.data.shared.OtpBlockUserModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideOtpBlocUserModuleFactory implements Factory<OtpBlockUserModule> {
  private final AppModule module;

  private final Provider<Context> contextProvider;

  private final Provider<DialogModule> dialogModuleProvider;

  private final Provider<SharedPrefModule> sharedPrefModuleProvider;

  private final Provider<DateTimeModule> dateTimeModuleProvider;

  private final Provider<CountDownModule> countDownModuleProvider;

  public AppModule_ProvideOtpBlocUserModuleFactory(AppModule module,
      Provider<Context> contextProvider, Provider<DialogModule> dialogModuleProvider,
      Provider<SharedPrefModule> sharedPrefModuleProvider,
      Provider<DateTimeModule> dateTimeModuleProvider,
      Provider<CountDownModule> countDownModuleProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.dialogModuleProvider = dialogModuleProvider;
    this.sharedPrefModuleProvider = sharedPrefModuleProvider;
    this.dateTimeModuleProvider = dateTimeModuleProvider;
    this.countDownModuleProvider = countDownModuleProvider;
  }

  @Override
  public OtpBlockUserModule get() {
    return provideOtpBlocUserModule(module, contextProvider.get(), dialogModuleProvider.get(), sharedPrefModuleProvider.get(), dateTimeModuleProvider.get(), countDownModuleProvider.get());
  }

  public static AppModule_ProvideOtpBlocUserModuleFactory create(AppModule module,
      Provider<Context> contextProvider, Provider<DialogModule> dialogModuleProvider,
      Provider<SharedPrefModule> sharedPrefModuleProvider,
      Provider<DateTimeModule> dateTimeModuleProvider,
      Provider<CountDownModule> countDownModuleProvider) {
    return new AppModule_ProvideOtpBlocUserModuleFactory(module, contextProvider, dialogModuleProvider, sharedPrefModuleProvider, dateTimeModuleProvider, countDownModuleProvider);
  }

  public static OtpBlockUserModule provideOtpBlocUserModule(AppModule instance, Context context,
      DialogModule dialogModule, SharedPrefModule sharedPrefModule, DateTimeModule dateTimeModule,
      CountDownModule countDownModule) {
    return Preconditions.checkNotNullFromProvides(instance.provideOtpBlocUserModule(context, dialogModule, sharedPrefModule, dateTimeModule, countDownModule));
  }
}
