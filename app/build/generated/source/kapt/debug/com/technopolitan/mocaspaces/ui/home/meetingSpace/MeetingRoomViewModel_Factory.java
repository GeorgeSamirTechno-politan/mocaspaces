// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.home.meetingSpace;

import com.technopolitan.mocaspaces.data.remote.MeetingRoomRemote;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MeetingRoomViewModel_Factory implements Factory<MeetingRoomViewModel> {
  private final Provider<MeetingRoomRemote> meetingRoomRemoteProvider;

  public MeetingRoomViewModel_Factory(Provider<MeetingRoomRemote> meetingRoomRemoteProvider) {
    this.meetingRoomRemoteProvider = meetingRoomRemoteProvider;
  }

  @Override
  public MeetingRoomViewModel get() {
    return newInstance(meetingRoomRemoteProvider.get());
  }

  public static MeetingRoomViewModel_Factory create(
      Provider<MeetingRoomRemote> meetingRoomRemoteProvider) {
    return new MeetingRoomViewModel_Factory(meetingRoomRemoteProvider);
  }

  public static MeetingRoomViewModel newInstance(MeetingRoomRemote meetingRoomRemote) {
    return new MeetingRoomViewModel(meetingRoomRemote);
  }
}
