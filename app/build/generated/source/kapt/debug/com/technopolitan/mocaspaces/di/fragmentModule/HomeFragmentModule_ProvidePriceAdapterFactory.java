// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.di.fragmentModule;

import com.technopolitan.mocaspaces.data.home.PriceAdapter;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeFragmentModule_ProvidePriceAdapterFactory implements Factory<PriceAdapter> {
  private final HomeFragmentModule module;

  public HomeFragmentModule_ProvidePriceAdapterFactory(HomeFragmentModule module) {
    this.module = module;
  }

  @Override
  public PriceAdapter get() {
    return providePriceAdapter(module);
  }

  public static HomeFragmentModule_ProvidePriceAdapterFactory create(HomeFragmentModule module) {
    return new HomeFragmentModule_ProvidePriceAdapterFactory(module);
  }

  public static PriceAdapter providePriceAdapter(HomeFragmentModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.providePriceAdapter());
  }
}
