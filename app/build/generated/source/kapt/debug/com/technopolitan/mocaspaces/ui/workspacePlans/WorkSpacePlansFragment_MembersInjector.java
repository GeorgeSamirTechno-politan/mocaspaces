// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.workspacePlans;

import com.technopolitan.mocaspaces.di.viewModel.ViewModelFactory;
import com.technopolitan.mocaspaces.models.workSpace.WorkSpacePlanMapper;
import com.technopolitan.mocaspaces.modules.ApiResponseModule;
import com.technopolitan.mocaspaces.modules.NavigationModule;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import java.util.List;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WorkSpacePlansFragment_MembersInjector implements MembersInjector<WorkSpacePlansFragment> {
  private final Provider<ViewModelFactory> viewModelFactoryProvider;

  private final Provider<ApiResponseModule<List<WorkSpacePlanMapper>>> apiHandlerProvider;

  private final Provider<NavigationModule> navigationModuleProvider;

  public WorkSpacePlansFragment_MembersInjector(Provider<ViewModelFactory> viewModelFactoryProvider,
      Provider<ApiResponseModule<List<WorkSpacePlanMapper>>> apiHandlerProvider,
      Provider<NavigationModule> navigationModuleProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.apiHandlerProvider = apiHandlerProvider;
    this.navigationModuleProvider = navigationModuleProvider;
  }

  public static MembersInjector<WorkSpacePlansFragment> create(
      Provider<ViewModelFactory> viewModelFactoryProvider,
      Provider<ApiResponseModule<List<WorkSpacePlanMapper>>> apiHandlerProvider,
      Provider<NavigationModule> navigationModuleProvider) {
    return new WorkSpacePlansFragment_MembersInjector(viewModelFactoryProvider, apiHandlerProvider, navigationModuleProvider);
  }

  @Override
  public void injectMembers(WorkSpacePlansFragment instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectApiHandler(instance, apiHandlerProvider.get());
    injectNavigationModule(instance, navigationModuleProvider.get());
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.workspacePlans.WorkSpacePlansFragment.viewModelFactory")
  public static void injectViewModelFactory(WorkSpacePlansFragment instance,
      ViewModelFactory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.workspacePlans.WorkSpacePlansFragment.apiHandler")
  public static void injectApiHandler(WorkSpacePlansFragment instance,
      ApiResponseModule<List<WorkSpacePlanMapper>> apiHandler) {
    instance.apiHandler = apiHandler;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.workspacePlans.WorkSpacePlansFragment.navigationModule")
  public static void injectNavigationModule(WorkSpacePlansFragment instance,
      NavigationModule navigationModule) {
    instance.navigationModule = navigationModule;
  }
}
