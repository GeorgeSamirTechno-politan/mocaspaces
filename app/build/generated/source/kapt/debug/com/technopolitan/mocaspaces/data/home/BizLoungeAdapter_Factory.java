// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.data.home;

import android.content.Context;
import com.technopolitan.mocaspaces.modules.GlideModule;
import com.technopolitan.mocaspaces.modules.SpannableStringModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BizLoungeAdapter_Factory implements Factory<BizLoungeAdapter> {
  private final Provider<GlideModule> glideModuleProvider;

  private final Provider<Context> contextProvider;

  private final Provider<SpannableStringModule> spannableStringModuleProvider;

  public BizLoungeAdapter_Factory(Provider<GlideModule> glideModuleProvider,
      Provider<Context> contextProvider,
      Provider<SpannableStringModule> spannableStringModuleProvider) {
    this.glideModuleProvider = glideModuleProvider;
    this.contextProvider = contextProvider;
    this.spannableStringModuleProvider = spannableStringModuleProvider;
  }

  @Override
  public BizLoungeAdapter get() {
    return newInstance(glideModuleProvider.get(), contextProvider.get(), spannableStringModuleProvider.get());
  }

  public static BizLoungeAdapter_Factory create(Provider<GlideModule> glideModuleProvider,
      Provider<Context> contextProvider,
      Provider<SpannableStringModule> spannableStringModuleProvider) {
    return new BizLoungeAdapter_Factory(glideModuleProvider, contextProvider, spannableStringModuleProvider);
  }

  public static BizLoungeAdapter newInstance(GlideModule glideModule, Context context,
      SpannableStringModule spannableStringModule) {
    return new BizLoungeAdapter(glideModule, context, spannableStringModule);
  }
}
