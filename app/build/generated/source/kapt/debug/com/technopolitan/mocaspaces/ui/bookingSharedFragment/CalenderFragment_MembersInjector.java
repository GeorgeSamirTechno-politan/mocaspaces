// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.bookingSharedFragment;

import com.technopolitan.mocaspaces.di.viewModel.ViewModelFactory;
import com.technopolitan.mocaspaces.models.booking.DayMapper;
import com.technopolitan.mocaspaces.modules.ApiResponseModule;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import java.util.List;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CalenderFragment_MembersInjector implements MembersInjector<CalenderFragment> {
  private final Provider<ViewModelFactory> viewModelFactoryProvider;

  private final Provider<ApiResponseModule<List<DayMapper>>> dayApiHandlerProvider;

  public CalenderFragment_MembersInjector(Provider<ViewModelFactory> viewModelFactoryProvider,
      Provider<ApiResponseModule<List<DayMapper>>> dayApiHandlerProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.dayApiHandlerProvider = dayApiHandlerProvider;
  }

  public static MembersInjector<CalenderFragment> create(
      Provider<ViewModelFactory> viewModelFactoryProvider,
      Provider<ApiResponseModule<List<DayMapper>>> dayApiHandlerProvider) {
    return new CalenderFragment_MembersInjector(viewModelFactoryProvider, dayApiHandlerProvider);
  }

  @Override
  public void injectMembers(CalenderFragment instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectDayApiHandler(instance, dayApiHandlerProvider.get());
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.bookingSharedFragment.CalenderFragment.viewModelFactory")
  public static void injectViewModelFactory(CalenderFragment instance,
      ViewModelFactory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.bookingSharedFragment.CalenderFragment.dayApiHandler")
  public static void injectDayApiHandler(CalenderFragment instance,
      ApiResponseModule<List<DayMapper>> dayApiHandler) {
    instance.dayApiHandler = dayApiHandler;
  }
}
