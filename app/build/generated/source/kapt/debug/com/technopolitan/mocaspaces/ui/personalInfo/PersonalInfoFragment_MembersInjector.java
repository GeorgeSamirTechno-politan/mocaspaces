// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.ui.personalInfo;

import com.technopolitan.mocaspaces.data.DropDownMapper;
import com.technopolitan.mocaspaces.data.gender.GenderMapper;
import com.technopolitan.mocaspaces.data.shared.MemberTypeViewModel;
import com.technopolitan.mocaspaces.modules.ApiResponseModule;
import com.technopolitan.mocaspaces.modules.NavigationModule;
import com.technopolitan.mocaspaces.modules.UtilityModule;
import com.technopolitan.mocaspaces.ui.register.RegisterViewModel;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import java.util.List;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PersonalInfoFragment_MembersInjector implements MembersInjector<PersonalInfoFragment> {
  private final Provider<PersonalInfoViewModel> viewModelProvider;

  private final Provider<MemberTypeViewModel> memberTypeViewModelProvider;

  private final Provider<ApiResponseModule<List<DropDownMapper>>> memberTypeResponseHandlerProvider;

  private final Provider<ApiResponseModule<List<GenderMapper>>> genderResponseHandlerProvider;

  private final Provider<RegisterViewModel> registerViewModelProvider;

  private final Provider<NavigationModule> navigationModuleProvider;

  private final Provider<UtilityModule> utilityModuleProvider;

  public PersonalInfoFragment_MembersInjector(Provider<PersonalInfoViewModel> viewModelProvider,
      Provider<MemberTypeViewModel> memberTypeViewModelProvider,
      Provider<ApiResponseModule<List<DropDownMapper>>> memberTypeResponseHandlerProvider,
      Provider<ApiResponseModule<List<GenderMapper>>> genderResponseHandlerProvider,
      Provider<RegisterViewModel> registerViewModelProvider,
      Provider<NavigationModule> navigationModuleProvider,
      Provider<UtilityModule> utilityModuleProvider) {
    this.viewModelProvider = viewModelProvider;
    this.memberTypeViewModelProvider = memberTypeViewModelProvider;
    this.memberTypeResponseHandlerProvider = memberTypeResponseHandlerProvider;
    this.genderResponseHandlerProvider = genderResponseHandlerProvider;
    this.registerViewModelProvider = registerViewModelProvider;
    this.navigationModuleProvider = navigationModuleProvider;
    this.utilityModuleProvider = utilityModuleProvider;
  }

  public static MembersInjector<PersonalInfoFragment> create(
      Provider<PersonalInfoViewModel> viewModelProvider,
      Provider<MemberTypeViewModel> memberTypeViewModelProvider,
      Provider<ApiResponseModule<List<DropDownMapper>>> memberTypeResponseHandlerProvider,
      Provider<ApiResponseModule<List<GenderMapper>>> genderResponseHandlerProvider,
      Provider<RegisterViewModel> registerViewModelProvider,
      Provider<NavigationModule> navigationModuleProvider,
      Provider<UtilityModule> utilityModuleProvider) {
    return new PersonalInfoFragment_MembersInjector(viewModelProvider, memberTypeViewModelProvider, memberTypeResponseHandlerProvider, genderResponseHandlerProvider, registerViewModelProvider, navigationModuleProvider, utilityModuleProvider);
  }

  @Override
  public void injectMembers(PersonalInfoFragment instance) {
    injectViewModel(instance, viewModelProvider.get());
    injectMemberTypeViewModel(instance, memberTypeViewModelProvider.get());
    injectMemberTypeResponseHandler(instance, memberTypeResponseHandlerProvider.get());
    injectGenderResponseHandler(instance, genderResponseHandlerProvider.get());
    injectRegisterViewModel(instance, registerViewModelProvider.get());
    injectNavigationModule(instance, navigationModuleProvider.get());
    injectUtilityModule(instance, utilityModuleProvider.get());
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.personalInfo.PersonalInfoFragment.viewModel")
  public static void injectViewModel(PersonalInfoFragment instance,
      PersonalInfoViewModel viewModel) {
    instance.viewModel = viewModel;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.personalInfo.PersonalInfoFragment.memberTypeViewModel")
  public static void injectMemberTypeViewModel(PersonalInfoFragment instance,
      MemberTypeViewModel memberTypeViewModel) {
    instance.memberTypeViewModel = memberTypeViewModel;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.personalInfo.PersonalInfoFragment.memberTypeResponseHandler")
  public static void injectMemberTypeResponseHandler(PersonalInfoFragment instance,
      ApiResponseModule<List<DropDownMapper>> memberTypeResponseHandler) {
    instance.memberTypeResponseHandler = memberTypeResponseHandler;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.personalInfo.PersonalInfoFragment.genderResponseHandler")
  public static void injectGenderResponseHandler(PersonalInfoFragment instance,
      ApiResponseModule<List<GenderMapper>> genderResponseHandler) {
    instance.genderResponseHandler = genderResponseHandler;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.personalInfo.PersonalInfoFragment.registerViewModel")
  public static void injectRegisterViewModel(PersonalInfoFragment instance,
      RegisterViewModel registerViewModel) {
    instance.registerViewModel = registerViewModel;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.personalInfo.PersonalInfoFragment.navigationModule")
  public static void injectNavigationModule(PersonalInfoFragment instance,
      NavigationModule navigationModule) {
    instance.navigationModule = navigationModule;
  }

  @InjectedFieldSignature("com.technopolitan.mocaspaces.ui.personalInfo.PersonalInfoFragment.utilityModule")
  public static void injectUtilityModule(PersonalInfoFragment instance,
      UtilityModule utilityModule) {
    instance.utilityModule = utilityModule;
  }
}
