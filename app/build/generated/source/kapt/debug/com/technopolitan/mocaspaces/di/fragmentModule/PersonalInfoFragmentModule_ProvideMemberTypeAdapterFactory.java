// Generated by Dagger (https://dagger.dev).
package com.technopolitan.mocaspaces.di.fragmentModule;

import android.content.Context;
import com.technopolitan.mocaspaces.data.memberType.MemberTypeAdapter;
import com.technopolitan.mocaspaces.modules.GlideModule;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PersonalInfoFragmentModule_ProvideMemberTypeAdapterFactory implements Factory<MemberTypeAdapter> {
  private final PersonalInfoFragmentModule module;

  private final Provider<GlideModule> glideModuleProvider;

  private final Provider<Context> contextProvider;

  public PersonalInfoFragmentModule_ProvideMemberTypeAdapterFactory(
      PersonalInfoFragmentModule module, Provider<GlideModule> glideModuleProvider,
      Provider<Context> contextProvider) {
    this.module = module;
    this.glideModuleProvider = glideModuleProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public MemberTypeAdapter get() {
    return provideMemberTypeAdapter(module, glideModuleProvider.get(), contextProvider.get());
  }

  public static PersonalInfoFragmentModule_ProvideMemberTypeAdapterFactory create(
      PersonalInfoFragmentModule module, Provider<GlideModule> glideModuleProvider,
      Provider<Context> contextProvider) {
    return new PersonalInfoFragmentModule_ProvideMemberTypeAdapterFactory(module, glideModuleProvider, contextProvider);
  }

  public static MemberTypeAdapter provideMemberTypeAdapter(PersonalInfoFragmentModule instance,
      GlideModule glideModule, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideMemberTypeAdapter(glideModule, context));
  }
}
